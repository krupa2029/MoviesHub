{"version":3,"sources":["lib/apikey.js","lib/api.js","hooks/use-http.js","components/Movies/MovieDetail.module.css","components/Movies/MovieDetail.js","pages/MovieDetailPage.js"],"names":["API_KEY","BASE_URL","IMG_API","getLatestMovies","a","fetch","headers","Accept","response","json","responseData","ok","Error","message","getMovieDetail","movie_id","loadedMovieDetail","getSearchMovie","movie_name","loadedSearchMovies","httpReducer","state","action","type","data","error","status","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","module","exports","MovieDetail","movieId","useParams","loadedDetail","useEffect","className","LoadingSpinner","genre","genres","id","push","name","movie_genre","join","MovieTrailerVideo","videos","results","movieTrailer","find","element","site","official","classes","movie_trailer_container","src","key","scrolling","frameBorder","title","container","back","to","style","textDecoration","color","movie_content_container","movie_content_container__column_1","img","poster_path","alt","movie_content_container__column_2","discription","overview","release_date","original_language","length","vote_average","MovieDetailPage"],"mappings":"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","file":"static/js/4.d8065617.chunk.js","sourcesContent":["export const API_KEY = '49c8538ad19c089104f3ea8509c6446c';","import { API_KEY } from \"./apikey\";\r\n\r\nconst BASE_URL = \"https://api.themoviedb.org/3\";\r\nexport const IMG_API = \"https://image.tmdb.org/t/p/w500/\";\r\n\r\nexport async function getLatestMovies() {\r\n  const response = await fetch(\r\n    `${BASE_URL}/discover/movie?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_watch_monetization_types=flatrate`,\r\n    {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    }\r\n  );\r\n  const responseData = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(responseData.message || \"Could not fetch Movies.\");\r\n  }\r\n\r\n  return responseData;\r\n}\r\n\r\nexport async function getMovieDetail(movie_id) {\r\n  const response = await fetch(\r\n    `${BASE_URL}/movie/${movie_id}?api_key=${API_KEY}&language=en-US&append_to_response=videos`\r\n  );\r\n  const loadedMovieDetail = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(loadedMovieDetail.message || \"Could not fetch Movie-Data.\");\r\n  }\r\n  return loadedMovieDetail;\r\n}\r\n\r\nexport async function getSearchMovie(movie_name) {\r\n  const response = await fetch(\r\n    `${BASE_URL}/search/movie/?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${movie_name}`\r\n  );\r\n  const loadedSearchMovies = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(\r\n      loadedSearchMovies.message || \"Could not find searched Movie.\"\r\n    );\r\n  }\r\n  return loadedSearchMovies;\r\n}\r\n","import { useReducer, useCallback } from \"react\";\r\n\r\nfunction httpReducer(state, action) {\r\n  // Sending Request to Server for Data...\r\n  if (action.type === \"SEND\") {\r\n    return {\r\n      data: null,\r\n      error: null,\r\n      status: \"pending\",\r\n    };\r\n  }\r\n\r\n  // If get the data successfully...\r\n  if (action.type === \"SUCCESS\") {\r\n    return {\r\n      data: action.responseData,\r\n      error: null,\r\n      status: \"completed\",\r\n    };\r\n  }\r\n\r\n  //If don't get expected response...\r\n  if (action.type === \"ERROR\") {\r\n    return {\r\n      data: null,\r\n      error: action.errorMessage,\r\n      status: \"completed\",\r\n    };\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\n// When sending Request set startWithPending=true...\r\n\r\nfunction useHttp(requestFunction, startWithPending = false) {\r\n  const [httpState, dispatch] = useReducer(httpReducer, {\r\n    status: startWithPending ? \"pending\" : null,\r\n    data: null,\r\n    error: null,\r\n  });\r\n\r\n  // sendRequest will be created/stored when 'requestFunction' have any Changes...\r\n  const sendRequest = useCallback(\r\n    async function (requestData) {\r\n      dispatch({ type: \"SEND\" });\r\n      try {\r\n        const responseData = await requestFunction(requestData);\r\n        dispatch({ type: \"SUCCESS\", responseData });\r\n      } catch (error) {\r\n        dispatch({\r\n          type: \"ERROR\",\r\n          errorMessage: error.message || \"Something went wrong!\",\r\n        });\r\n      }\r\n    },\r\n    [requestFunction]\r\n  );\r\n\r\n  return {\r\n    sendRequest,\r\n    ...httpState,\r\n  };\r\n}\r\n\r\nexport default useHttp;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MovieDetail_container__2Zel5\",\"back\":\"MovieDetail_back__3DIhb\",\"movie_content_container\":\"MovieDetail_movie_content_container__3_vp5\",\"movie_content_container__column_1\":\"MovieDetail_movie_content_container__column_1__2PbeL\",\"movie_content_container__column_2\":\"MovieDetail_movie_content_container__column_2__3kv2O\",\"movie_trailer_container\":\"MovieDetail_movie_trailer_container__3FcQ6\",\"img\":\"MovieDetail_img__PpnJ1\",\"title\":\"MovieDetail_title__3mXDv\",\"discription\":\"MovieDetail_discription__3932F\",\"overview\":\"MovieDetail_overview__3RRWL\"};","import { Fragment, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport { getMovieDetail, IMG_API } from \"../../lib/api\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner/LoadingSpinner\";\r\nimport classes from \"./MovieDetail.module.css\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport { BiStar } from \"react-icons/bi\";\r\n\r\nconst MovieDetail = () => {\r\n  const params = useParams();\r\n\r\n  const { movieId } = params;\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedDetail,\r\n    error,\r\n  } = useHttp(getMovieDetail, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(movieId);\r\n  }, [sendRequest, movieId]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <p className=\"centered\">{error}</p>;\r\n  }\r\n\r\n  const genre = [];\r\n  if (loadedDetail.genres !== null) {\r\n    for (const id in loadedDetail.genres) {\r\n      genre.push(loadedDetail.genres[id].name);\r\n    }\r\n  }\r\n  const movie_genre = genre.join(\" / \");\r\n\r\n let MovieTrailerVideo = (\r\n    <h2>{\"Trailer of this movie is not available!!\"}</h2>\r\n  );\r\n\r\n  if (loadedDetail.videos.results !== null) {\r\n    const movieTrailer = loadedDetail.videos.results.find((element) => {\r\n      return (\r\n        element.site === \"YouTube\" &&\r\n        element.type === \"Trailer\" &&\r\n        element.official === true\r\n      );\r\n    });\r\n\r\n    MovieTrailerVideo = (\r\n      <div className={classes.movie_trailer_container}>\r\n        <h2>Trailer: {movieTrailer.name}</h2>\r\n        <iframe\r\n          src={`https://www.youtube.com/embed/${movieTrailer.key}`}\r\n          scrolling=\"no\"\r\n          frameBorder=\"0\"\r\n          title=\"trailer\"\r\n        ></iframe>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.container}>\r\n        <div className={classes.back}>\r\n          <Link to=\"/movies\" style={{ textDecoration: \"none\" }}>\r\n            <h3 style={{ color: \"white\" }}>\r\n              <IoArrowBackCircleOutline />\r\n              <span>Back</span>\r\n            </h3>\r\n          </Link>\r\n        </div>\r\n\r\n        <div className={classes.movie_content_container}>\r\n          <div className={classes.movie_content_container__column_1}>\r\n            <div className={classes.img}>\r\n              <img\r\n                src={IMG_API + loadedDetail.poster_path}\r\n                alt={\"Movie-Poster\"}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={classes.movie_content_container__column_2}>\r\n            <div className={classes.title}>{loadedDetail.title}</div>\r\n            <div className={classes.discription}>\r\n              <h3>Overview</h3>\r\n              <p>{loadedDetail.overview}</p>\r\n              <p>Release Date: {loadedDetail.release_date}</p>\r\n              <p>Language: {loadedDetail.original_language}</p>\r\n              {genre.length > 0 && <p>Genre: {movie_genre}</p>}\r\n              <span>\r\n                Ratings: {loadedDetail.vote_average}\r\n                <BiStar />\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {MovieTrailerVideo}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;\r\n","import MovieDetail from \"../components/Movies/MovieDetail\";\r\n\r\n\r\nconst MovieDetailPage = () => {\r\n    return <MovieDetail/>\r\n    \r\n}\r\n\r\nexport default MovieDetailPage;"],"sourceRoot":""}